@model HomeIndexViewModel;

@{
    ViewData["Title"] = "This is the Index";
}

@*<div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

        <p>Nombre: @Model.UserName</p>
        <p>Fecha: @Model.DateTimeNow</p>
        <p>Dia: @Model.DayNumber</p>

    </div>

    <label>Antes de vista parcial</label>
    <partial name="_ClassroomInfo.cshtml" model="@Model.ItemPartial" />
    <label>Despues de vista parcial</label>*@

<div class="g-signin2" data-onsuccess="onSignIn"></div>

<label id="lblUserName"></label>
<label id="lblUserStatus"></label>
<label id="lblFacebookId"></label>


@section Scripts {

    <script src="https://apis.google.com/js/platform.js" ></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            debugger;

            var auth2; // The Sign-In object.
            var googleUser; // The current user

            /**
            * Calls startAuth after Sign in V2 finishes setting up.
            */
            gapi.load('auth2', function () {
                debugger;
                /* Ready. Make a call to gapi.auth2.init or some other API */

                /**
                * Initializes Signin v2 and sets up listeners.
                */
                auth2 = gapi.auth2.init({
                    client_id: '219872249273-3il2l4m4l6ceb971dq4nntl586mh2j96.apps.googleusercontent.com',
                    scope: 'profile'
                });

                debugger;
                // Listen for sign-in state changes.
                auth2.isSignedIn.listen(signinChanged);

                // Listen for changes to current user.
                auth2.currentUser.listen(userChanged);

                // Sign in the user if they are currently signed in.
                if (auth2.isSignedIn.get() == true) {
                    auth2.signIn();
                }

                // Start with the current live values.
                refreshValues();
            });

            /**
             * Listener method for sign-out live value.
             *
             * param {boolean} val the updated signed out state.
             */
            var signinChanged = function (val) {
                debugger;
                console.log('Signin state changed to ', val);
                document.getElementById('lblUserStatus').innerText = val;
            };


            /**
             * Listener method for when the user changes.
             *
             * param {GoogleUser} user the updated user.
             */
            var userChanged = function (user) {
                debugger;
                console.log('User now: ', user);
                googleUser = user;
                updateGoogleUser();
                document.getElementById('lblUserName').innerText =
                    JSON.stringify(user, undefined, 2);
            };


            /**
             * Updates the properties in the Google User table using the current user.
             */
            var updateGoogleUser = function () {
                debugger;
                if (googleUser) {
                    document.getElementById('user-id').innerText = googleUser.getId();
                    document.getElementById('user-scopes').innerText =
                        googleUser.getGrantedScopes();
                    document.getElementById('auth-response').innerText =
                        JSON.stringify(googleUser.getAuthResponse(), undefined, 2);
                } else {
                    document.getElementById('user-id').innerText = '--';
                    document.getElementById('user-scopes').innerText = '--';
                    document.getElementById('auth-response').innerText = '--';
                }
            };


            /**
             * Retrieves the current user and signed in states from the GoogleAuth
             * object.
             */
            var refreshValues = function () {
                debugger;
                if (auth2) {
                    console.log('Refreshing values...');

                    googleUser = auth2.currentUser.get();

                    document.getElementById('lblUserName').innerText =
                        JSON.stringify(googleUser, undefined, 2);
                    document.getElementById('lblUserStatus').innerText =
                        auth2.isSignedIn.get();

                    updateGoogleUser();
                }
            }

            window.googleAsyncInit = function () {

            }
        });

        function onSignIn(googleUser) {
            debugger;
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            console.log('Name: ' + profile.getName());
            console.log('Image URL: ' + profile.getImageUrl());
            console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
        }

    </script>
}
